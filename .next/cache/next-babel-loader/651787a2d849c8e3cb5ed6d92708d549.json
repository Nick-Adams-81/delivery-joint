{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasadams916/Desktop/deliveryJoint-main/delivery-joint/components/Hybrid/HybridCardHook.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Button from 'react-bootstrap/Button'; // Component name\n\nconst HybridCardHook = () => {\n  // useState hook(initial state(data), and function to setState(setData), our initial state is set to an empty array)\n  const {\n    0: data,\n    1: setData\n  } = useState([]); // useEffect for our api call(axios)\n\n  useEffect(() => {\n    axios // Get http route(currently from jsonplaceholder api, future development it will be another api)\n    .get(\"https://jsonplaceholder.typicode.com/posts/1/comments\") // promise converting our data to json format for mapping purposes    \n    .then(res => {\n      // Setting our state to the response from the api        \n      setData(res.data); // Console logging the response from the api        \n\n      console.log(res.data);\n    }) // Error catching    \n    .catch(err => {\n      // Console logging any errors        \n      console.log(err);\n    });\n  }, []); // Function for future development(api post route)\n\n  function clickMe() {\n    const newData = {\n      // dummy data for testing purposes\n      \"userId\": 250,\n      \"id\": data.id,\n      \"title\": data.name,\n      \"body\": data.body\n    }; // our axios api call\n\n    axios // our dummy post http route for testing purposes\n    .post('https://jsonplaceholder.typicode.com/posts', newData).then(data => {\n      // logging our data \n      console.log(data);\n    }).then(alert(\"data posted!\")) // error catching\n    .catch(err => {\n      console.log(err);\n    });\n  } // Our return which will be displayed in the browser\n\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-198316008\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, data.map(data => __jsx(\"div\", {\n    id: \"card\",\n    key: data.id,\n    className: \"jsx-198316008\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    id: \"name\",\n    className: \"jsx-198316008\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, data.name), __jsx(\"div\", {\n    id: \"body\",\n    className: \"jsx-198316008\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, data.body), __jsx(\"div\", {\n    id: \"email\",\n    className: \"jsx-198316008\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, data.email), __jsx(\"div\", {\n    id: \"btn\",\n    className: \"jsx-198316008\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    variant: \"success\",\n    onClick: clickMe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Click me!\"))))), __jsx(_JSXStyle, {\n    id: \"198316008\",\n    __self: this\n  }, \"#card.jsx-198316008{width:35%;display:inline-block;margin:5px;box-shadow:0 2px 3px #999999,0 2px 3px #999999;}#name.jsx-198316008{border-bottom:1px solid black;height:25%;width:100%;background-color:slategrey;color:blue;padding:5px;}#body.jsx-198316008{padding:3px;}#email.jsx-198316008{color:red;margin:5px;padding:3px;text-align:center;}#btn.jsx-198316008{padding:9px;margin-left:31%;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaWNob2xhc2FkYW1zOTE2L0Rlc2t0b3AvZGVsaXZlcnlKb2ludC1tYWluL2RlbGl2ZXJ5LWpvaW50L2NvbXBvbmVudHMvSHlicmlkL0h5YnJpZENhcmRIb29rLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRFaUIsQUFHK0IsQUFNb0IsQUFRbEIsQUFHRixBQU1FLFVBdEJTLEFBaUJWLEVBSGYsQUFTb0IsU0FMSixPQU1oQixFQWxCZSxDQUxBLEVBa0JPLFFBWlAsQ0FMcUMsU0FrQnBELENBWitCLDJCQUNoQixVQU5mLENBT2dCLFlBQ2hCIiwiZmlsZSI6Ii9Vc2Vycy9uaWNob2xhc2FkYW1zOTE2L0Rlc2t0b3AvZGVsaXZlcnlKb2ludC1tYWluL2RlbGl2ZXJ5LWpvaW50L2NvbXBvbmVudHMvSHlicmlkL0h5YnJpZENhcmRIb29rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJ1xuaW1wb3J0IEJ1dHRvbiBmcm9tICdyZWFjdC1ib290c3RyYXAvQnV0dG9uJ1xuLy8gQ29tcG9uZW50IG5hbWVcbmNvbnN0IEh5YnJpZENhcmRIb29rID0gKCkgPT4ge1xuICAgIC8vIHVzZVN0YXRlIGhvb2soaW5pdGlhbCBzdGF0ZShkYXRhKSwgYW5kIGZ1bmN0aW9uIHRvIHNldFN0YXRlKHNldERhdGEpLCBvdXIgaW5pdGlhbCBzdGF0ZSBpcyBzZXQgdG8gYW4gZW1wdHkgYXJyYXkpXG4gICAgY29uc3QgW2RhdGEsIHNldERhdGFdID0gdXNlU3RhdGUoW10pXG4gICAgLy8gdXNlRWZmZWN0IGZvciBvdXIgYXBpIGNhbGwoYXhpb3MpXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgYXhpb3NcbiAgICAgICAgICAgIC8vIEdldCBodHRwIHJvdXRlKGN1cnJlbnRseSBmcm9tIGpzb25wbGFjZWhvbGRlciBhcGksIGZ1dHVyZSBkZXZlbG9wbWVudCBpdCB3aWxsIGJlIGFub3RoZXIgYXBpKVxuICAgICAgICAgICAgLmdldChcImh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cy8xL2NvbW1lbnRzXCIpXG4gICAgICAgICAgICAvLyBwcm9taXNlIGNvbnZlcnRpbmcgb3VyIGRhdGEgdG8ganNvbiBmb3JtYXQgZm9yIG1hcHBpbmcgcHVycG9zZXMgICAgXG4gICAgICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgICAgIC8vIFNldHRpbmcgb3VyIHN0YXRlIHRvIHRoZSByZXNwb25zZSBmcm9tIHRoZSBhcGkgICAgICAgIFxuICAgICAgICAgICAgICAgIHNldERhdGEocmVzLmRhdGEpXG4gICAgICAgICAgICAgICAgLy8gQ29uc29sZSBsb2dnaW5nIHRoZSByZXNwb25zZSBmcm9tIHRoZSBhcGkgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC8vIEVycm9yIGNhdGNoaW5nICAgIFxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgLy8gQ29uc29sZSBsb2dnaW5nIGFueSBlcnJvcnMgICAgICAgIFxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICAgICAgICAgIH0pXG4gICAgfSwgW10pXG4gICAgLy8gRnVuY3Rpb24gZm9yIGZ1dHVyZSBkZXZlbG9wbWVudChhcGkgcG9zdCByb3V0ZSlcbiAgICBmdW5jdGlvbiBjbGlja01lKCkge1xuICAgICAgICBjb25zdCBuZXdEYXRhID0ge1xuICAgICAgICAgICAgLy8gZHVtbXkgZGF0YSBmb3IgdGVzdGluZyBwdXJwb3Nlc1xuICAgICAgICAgICAgXCJ1c2VySWRcIjogMjUwLFxuICAgICAgICAgICAgXCJpZFwiOiBkYXRhLmlkLFxuICAgICAgICAgICAgXCJ0aXRsZVwiOiBkYXRhLm5hbWUsXG4gICAgICAgICAgICBcImJvZHlcIjogZGF0YS5ib2R5XG4gICAgICAgIH1cbiAgICAgICAgLy8gb3VyIGF4aW9zIGFwaSBjYWxsXG4gICAgICAgIGF4aW9zXG4gICAgICAgIC8vIG91ciBkdW1teSBwb3N0IGh0dHAgcm91dGUgZm9yIHRlc3RpbmcgcHVycG9zZXNcbiAgICAgICAgICAgIC5wb3N0KCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMnLCBuZXdEYXRhKVxuICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gbG9nZ2luZyBvdXIgZGF0YSBcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKFxuICAgICAgICAgICAgICAgIGFsZXJ0KFwiZGF0YSBwb3N0ZWQhXCIpXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAvLyBlcnJvciBjYXRjaGluZ1xuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICAgICAgICB9KVxuICAgIH1cblxuICAgIC8vIE91ciByZXR1cm4gd2hpY2ggd2lsbCBiZSBkaXNwbGF5ZWQgaW4gdGhlIGJyb3dzZXJcbiAgICByZXR1cm4gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICB7LyogRnVuY3Rpb24gdGhhdCBtYXBzIG92ZXIgb3VyIGRhdGEoc3RhdGUpIGFycmF5IHNvIHdlIGNhbiBwdWxsIG91dCBzaW5nbGUgXG4gICAgICAgICAgICAgICAgICAgIHBpZWNlcyBvZiBkYXRhIGFuZCBkaXNwbGF5cyB0aGUgZGF0YSBpbiB0aGUgZm9ybSBvZiBhIGNhcmQgaW4gdGhlIGJyb3dzZXIgKi99XG4gICAgICAgICAgICAgICAge2RhdGEubWFwKGRhdGEgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVwiY2FyZFwiIGtleT17ZGF0YS5pZH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPVwibmFtZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtkYXRhLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9XCJib2R5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2RhdGEuYm9keX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD1cImVtYWlsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2RhdGEuZW1haWx9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9J2J0bic+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwic3VjY2Vzc1wiIG9uQ2xpY2s9e2NsaWNrTWV9PkNsaWNrIG1lITwvQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICB7Lyogb3VyIHN0eWxlc2hlZXQoaW4ganN4IGZvcm1hdCkgKi99XG4gICAgICAgICAgICA8c3R5bGUganN4PlxuICAgICAgICAgICAgICAgIHtgXG4gICAgICAgICAgICAgICAgI2NhcmQge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMzUlO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogNXB4O1xuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDJweCAzcHggIzk5OTk5OSwgMCAycHggM3B4ICM5OTk5OTk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICNuYW1lIHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI1JTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHNsYXRlZ3JleTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgI2JvZHkge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAzcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICNlbWFpbCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZWQ7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogNXB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAzcHg7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgI2J0biB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDlweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDMxJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYH1cbiAgICAgICAgICAgIDwvc3R5bGU+XG4gICAgICAgIDwvPlxuICAgIClcblxuXG59XG4vLyBFeHBvcnRpbmcgdGhlIGVudGlyZSBjb21wb25lbnRcbmV4cG9ydCBkZWZhdWx0IEh5YnJpZENhcmRIb29rIl19 */\\n/*@ sourceURL=/Users/nicholasadams916/Desktop/deliveryJoint-main/delivery-joint/components/Hybrid/HybridCardHook.js */\"));\n}; // Exporting the entire component\n\n\nexport default HybridCardHook;","map":{"version":3,"sources":["/Users/nicholasadams916/Desktop/deliveryJoint-main/delivery-joint/components/Hybrid/HybridCardHook.js"],"names":["useState","useEffect","axios","Button","HybridCardHook","data","setData","get","then","res","console","log","catch","err","clickMe","newData","id","name","body","post","alert","map","email"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;;AACA,MAAMC,cAAc,GAAG,MAAM;AACzB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFyB,CAGzB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACD;AADC,KAEAK,GAFL,CAES,uDAFT,EAGI;AAHJ,KAIKC,IAJL,CAIUC,GAAG,IAAI;AACT;AACAH,MAAAA,OAAO,CAACG,GAAG,CAACJ,IAAL,CAAP,CAFS,CAGT;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACJ,IAAhB;AACH,KATL,EAUI;AAVJ,KAWKO,KAXL,CAWWC,GAAG,IAAI;AACV;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAdL;AAeH,GAhBQ,EAgBN,EAhBM,CAAT,CAJyB,CAqBzB;;AACA,WAASC,OAAT,GAAmB;AACf,UAAMC,OAAO,GAAG;AACZ;AACA,gBAAU,GAFE;AAGZ,YAAMV,IAAI,CAACW,EAHC;AAIZ,eAASX,IAAI,CAACY,IAJF;AAKZ,cAAQZ,IAAI,CAACa;AALD,KAAhB,CADe,CAQf;;AACAhB,IAAAA,KAAK,CACL;AADK,KAEAiB,IAFL,CAEU,4CAFV,EAEwDJ,OAFxD,EAGKP,IAHL,CAGUH,IAAI,IAAI;AACV;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH,KANL,EAOKG,IAPL,CAQQY,KAAK,CAAC,cAAD,CARb,EAUI;AAVJ,KAWKR,KAXL,CAWYC,GAAD,IAAS;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAbL;AAcH,GA7CwB,CA+CzB;;;AACA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKR,IAAI,CAACgB,GAAL,CAAShB,IAAI,IACV;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,GAAG,EAAEA,IAAI,CAACW,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,IAAI,CAACY,IADV,CADJ,EAII;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,IAAI,CAACa,IADV,CAJJ,EAOI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,IAAI,CAACiB,KADV,CAPJ,EAUI;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAER,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAVJ,CADH,CAHL,CADJ;AAAA;AAAA;AAAA,q3MADJ;AA2DH,CA3GD,C,CA4GA;;;AACA,eAAeV,cAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Button from 'react-bootstrap/Button'\n// Component name\nconst HybridCardHook = () => {\n    // useState hook(initial state(data), and function to setState(setData), our initial state is set to an empty array)\n    const [data, setData] = useState([])\n    // useEffect for our api call(axios)\n    useEffect(() => {\n        axios\n            // Get http route(currently from jsonplaceholder api, future development it will be another api)\n            .get(\"https://jsonplaceholder.typicode.com/posts/1/comments\")\n            // promise converting our data to json format for mapping purposes    \n            .then(res => {\n                // Setting our state to the response from the api        \n                setData(res.data)\n                // Console logging the response from the api        \n                console.log(res.data)\n            })\n            // Error catching    \n            .catch(err => {\n                // Console logging any errors        \n                console.log(err)\n            })\n    }, [])\n    // Function for future development(api post route)\n    function clickMe() {\n        const newData = {\n            // dummy data for testing purposes\n            \"userId\": 250,\n            \"id\": data.id,\n            \"title\": data.name,\n            \"body\": data.body\n        }\n        // our axios api call\n        axios\n        // our dummy post http route for testing purposes\n            .post('https://jsonplaceholder.typicode.com/posts', newData)\n            .then(data => {\n                // logging our data \n                console.log(data)\n            })\n            .then(\n                alert(\"data posted!\")\n            )\n            // error catching\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    // Our return which will be displayed in the browser\n    return (\n        <>\n            <div>\n                {/* Function that maps over our data(state) array so we can pull out single \n                    pieces of data and displays the data in the form of a card in the browser */}\n                {data.map(data => (\n                    <div id=\"card\" key={data.id}>\n                        <div id=\"name\">\n                            {data.name}\n                        </div>\n                        <div id=\"body\">\n                            {data.body}\n                        </div>\n                        <div id=\"email\">\n                            {data.email}\n                        </div>\n                        <div id='btn'>\n                            <Button variant=\"success\" onClick={clickMe}>Click me!</Button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            {/* our stylesheet(in jsx format) */}\n            <style jsx>\n                {`\n                #card {\n                    width: 35%;\n                    display: inline-block;\n                    margin: 5px;\n                    box-shadow: 0 2px 3px #999999, 0 2px 3px #999999;\n                }\n                #name {\n                    border-bottom: 1px solid black;\n                    height: 25%;\n                    width: 100%;\n                    background-color: slategrey;\n                    color: blue;\n                    padding: 5px;\n                }\n                #body {\n                    padding: 3px;\n                }\n                #email {\n                    color: red;\n                    margin: 5px;\n                    padding: 3px;\n                    text-align: center;\n                }\n                #btn {\n                    padding: 9px;\n                    margin-left: 31%;\n                }\n                \n                `}\n            </style>\n        </>\n    )\n\n\n}\n// Exporting the entire component\nexport default HybridCardHook"]},"metadata":{},"sourceType":"module"}